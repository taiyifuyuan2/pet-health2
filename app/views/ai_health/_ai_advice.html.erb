<div class="ai-advice-card">
  <div class="ai-advice-header">
    <div class="ai-icon">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z" fill="#4F46E5"/>
        <path d="M19 15L20.09 18.26L23 19L20.09 19.74L19 23L17.91 19.74L15 19L17.91 18.26L19 15Z" fill="#4F46E5"/>
        <path d="M5 15L6.09 18.26L9 19L6.09 19.74L5 23L3.91 19.74L1 19L3.91 18.26L5 15Z" fill="#4F46E5"/>
      </svg>
    </div>
    <h3 class="ai-advice-title">AI健康アドバイス</h3>
    <span class="ai-badge">AI生成</span>
  </div>
  
  <div class="ai-advice-content">
    <div class="ai-advice-text">
      <%= simple_format(advice[:content]) %>
    </div>
    
    <div class="ai-advice-meta">
      <small class="ai-timestamp">
        生成時刻: <%= advice[:generated_at].strftime("%Y年%m月%d日 %H:%M") %>
      </small>
    </div>
  </div>
  
  <div class="ai-advice-actions">
    <button class="btn btn-sm btn-outline-primary" onclick="refreshAiAdvice()">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M1 4V10H7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M23 20V14H17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10M23 14L18.36 18.36A9 9 0 0 1 3.51 15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
      更新
    </button>
  </div>
</div>

<style>
.ai-advice-card {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 12px;
  padding: 20px;
  margin: 16px 0;
  color: white;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.ai-advice-header {
  display: flex;
  align-items: center;
  margin-bottom: 16px;
  gap: 12px;
}

.ai-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
}

.ai-advice-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0;
  flex: 1;
}

.ai-badge {
  background: rgba(255, 255, 255, 0.2);
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 0.75rem;
  font-weight: 500;
}

.ai-advice-content {
  margin-bottom: 16px;
}

.ai-advice-text {
  line-height: 1.6;
  font-size: 0.95rem;
  color: #ffffff;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

.ai-advice-text p {
  margin-bottom: 12px;
  color: #ffffff;
}

.ai-advice-text p:last-child {
  margin-bottom: 0;
  color: #ffffff;
}

.ai-advice-text h1,
.ai-advice-text h2,
.ai-advice-text h3,
.ai-advice-text h4,
.ai-advice-text h5,
.ai-advice-text h6 {
  color: #ffffff;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  margin-top: 1.5em;
  margin-bottom: 0.5em;
}

.ai-advice-text ul,
.ai-advice-text ol {
  color: #ffffff;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

.ai-advice-text li {
  color: #ffffff;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  margin-bottom: 0.5em;
}

.ai-advice-text strong {
  color: #ffffff;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  font-weight: 600;
}

.ai-advice-meta {
  margin-top: 12px;
  padding-top: 12px;
  border-top: 1px solid rgba(255, 255, 255, 0.2);
}

.ai-timestamp {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.8rem;
}

.ai-advice-actions {
  display: flex;
  gap: 8px;
}

.btn-outline-primary {
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.3);
  color: white;
  transition: all 0.2s;
}

.btn-outline-primary:hover {
  background: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.5);
  color: white;
}

.btn-outline-primary svg {
  margin-right: 4px;
}
</style>

<script>
// グローバルスコープに関数を定義
window.refreshAiAdvice = function() {
  const petId = <%= @pet.id %>;
  const button = event.target.closest('button');
  const originalText = button.innerHTML;
  
  button.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/><path d="M12 6V12L16 14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg> 生成中...';
  button.disabled = true;
  
  fetch(`/pets/${petId}/ai_advice`, {
    method: 'GET',
    headers: {
      'Accept': 'text/html',
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
  .then(response => response.text())
  .then(html => {
    document.querySelector('.ai-advice-card').outerHTML = html;
  })
  .catch(error => {
    console.error('Error:', error);
    button.innerHTML = originalText;
    button.disabled = false;
    alert('AIアドバイスの取得に失敗しました。');
  });
};
</script>
